{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","request","movieTitle","a","fetch","response","ok","Error","status","statusText","json","FindMovie","addMovie","useState","film","setFilm","title","setTitle","error","setError","handleSubmit","e","preventDefault","console","log","onSubmit","htmlFor","type","id","value","placeholder","classNames","onChange","target","onClick","App","setMovies","newMovie","find","prevMovies","ReactDOM","render","document","getElementById"],"mappings":"+TAOaA,EAA6B,SAAC,GAAe,IAAbC,EAAY,EAAZA,MAC3C,OACE,sBAAKC,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,gBAAlB,SACE,qBACEC,IAAG,OAAEF,QAAF,IAAEA,OAAF,EAAEA,EAAOG,OACZC,IAAI,kBAIV,sBAAKH,UAAU,eAAf,UACE,sBAAKA,UAAU,QAAf,UACE,qBAAKA,UAAU,aAAf,SACE,wBAAQA,UAAU,iBAAlB,SACE,qBACEC,IAAI,wBACJE,IAAI,aAIV,qBAAKH,UAAU,gBAAf,SACE,mBAAGA,UAAU,aAAb,gBAA2BD,QAA3B,IAA2BA,OAA3B,EAA2BA,EAAOK,aAItC,sBAAKJ,UAAU,UAAf,iBACGD,QADH,IACGA,OADH,EACGA,EAAOM,KACR,iCC3BGC,EAA8B,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OAC5C,OACE,qBAAKP,UAAU,SAAf,SACGO,EAAOC,KAAI,SAAAT,GAAK,OACf,cAAC,EAAD,CAEEA,MAAOA,GADFA,EAAMU,c,+CCXRC,EAAO,uCAAG,WAAOC,GAAP,iBAAAC,EAAA,sEACEC,MAAM,GAAD,OAHb,8CAGa,OAAeF,IADtB,WACfG,EADe,QAGPC,GAHO,sBAIb,IAAIC,MAAJ,kBAAqBF,EAASG,OAA9B,0BAAsDH,EAASI,aAJlD,uBAOeJ,EAASK,OAPxB,cAOfpB,EAPe,yBASdA,GATc,2CAAH,sDCQPqB,EAA6B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAC3C,EAAwBC,qBAAxB,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBAAOG,EAAP,KAAcC,EAAd,KACA,EAA0BJ,oBAAS,GAAnC,mBAAOK,EAAP,KAAcC,EAAd,KAEMC,EAAY,uCAAG,WAAOC,GAAP,eAAAlB,EAAA,6DACnBkB,EAAEC,iBADiB,SAGCrB,EAAQe,GAHT,QAGb1B,EAHa,UAMjB6B,GAAS,GAETI,QAAQC,IAAIV,EAAME,EAAOE,IAG3BD,EAAS,IACTF,EAAQzB,GACR6B,GAAS,GAbU,2CAAH,sDA2BlB,OACE,qCACE,uBACE5B,UAAU,aACVkC,SAAUL,EAFZ,UAIE,sBAAK7B,UAAU,QAAf,UACE,uBAAOA,UAAU,QAAQmC,QAAQ,cAAjC,yBAIA,qBAAKnC,UAAU,UAAf,SACE,uBACEoC,KAAK,OACLC,GAAG,cACHC,MAAOb,EACPc,YAAY,0BACZvC,UAAWwC,IAAW,QAAS,CAC7B,YAAab,IAEfc,SAAU,SAACX,GACTJ,EAASI,EAAEY,OAAOJ,OAClBV,GAAS,QAKdD,GACC,mBAAG3B,UAAU,iBAAb,qDAMJ,sBAAKA,UAAU,mBAAf,UACE,qBAAKA,UAAU,UAAf,SACE,wBACEoC,KAAK,SACLpC,UAAU,kBAFZ,4BAQF,qBAAKA,UAAU,UAAf,SACE,wBACEoC,KAAK,SACLpC,UAAU,oBACV2C,QA3DQ,WACbpB,IAILF,EAASE,GACTG,EAAS,IACTF,EAAQ,MACRI,GAAS,KAgDD,qCAWN,sBAAK5B,UAAU,YAAf,UACE,oBAAIA,UAAU,QAAd,qBACA,cAAC,EAAD,CACED,MAAOwB,GAAQ,cChGZqB,EAAgB,WAC3B,MAA4BtB,mBAAkB,IAA9C,mBAAOf,EAAP,KAAesC,EAAf,KAWA,OACE,sBAAK7C,UAAU,OAAf,UACE,qBAAKA,UAAU,eAAf,SACE,cAAC,EAAD,CAAYO,OAAQA,MAEtB,qBAAKP,UAAU,UAAf,SACE,cAAC,EAAD,CAAWqB,SAfA,SAACyB,GACHvC,EACVwC,MAAK,SAAAhD,GAAK,OAAIA,EAAMU,SAAWqC,EAASrC,WAGzCoC,GAAU,SAAAG,GAAU,4BAAQA,GAAR,CAAoBF,gBCT9CG,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.a1060e21.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie | null;\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => {\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie?.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie?.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie?.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => {\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","const BASE_URL = 'http://www.omdbapi.com/?apikey=baafa03e&t=';\n\nexport const request = async (movieTitle: string) => {\n  const response = await fetch(`${BASE_URL}${movieTitle}`);\n\n  if (!response.ok) {\n    throw new Error(`Status: ${response.status} - StatusText: ${response.statusText}`);\n  }\n\n  const movie: Promise<Movie> = await response.json();\n\n  return movie;\n};\n","import React, { FormEvent, useState } from 'react';\nimport './FindMovie.scss';\nimport classNames from 'classnames';\nimport { request } from '../../api';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  addMovie: (movie: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ addMovie }) => {\n  const [film, setFilm] = useState<Movie | null>();\n  const [title, setTitle] = useState('');\n  const [error, setError] = useState(false);\n\n  const handleSubmit = async (e: FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n\n    const movie = await request(title);\n\n    if (!movie) {\n      setError(true);\n      // eslint-disable-next-line no-console\n      console.log(film, title, error);\n    }\n\n    setTitle('');\n    setFilm(movie);\n    setError(false);\n  };\n\n  const handleClick = () => {\n    if (!film) {\n      return;\n    }\n\n    addMovie(film);\n    setTitle('');\n    setFilm(null);\n    setError(false);\n  };\n\n  return (\n    <>\n      <form\n        className=\"find-movie\"\n        onSubmit={handleSubmit}\n      >\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              value={title}\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', {\n                'is-danger': error,\n              })}\n              onChange={(e) => {\n                setTitle(e.target.value);\n                setError(false);\n              }}\n            />\n          </div>\n\n          {error && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              type=\"submit\"\n              className=\"button is-light\"\n            >\n              Find a movie\n            </button>\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={handleClick}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        <MovieCard\n          movie={film || null}\n        />\n      </div>\n    </>\n  );\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovie = (newMovie: Movie) => {\n    const film = movies\n      .find(movie => movie.imdbID === newMovie.imdbID);\n\n    if (!film) {\n      setMovies(prevMovies => [...prevMovies, newMovie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie addMovie={addMovie} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}